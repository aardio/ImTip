import fonts.imtip; 
import fonts.fontAwesomeDlg;
import fonts.fontAwesomeSub;
import config;
import win.ui;
/*DSG{{*/
var winform = win.form(text="ImTip - AI 智能助手";right=759;bottom=620;bgcolor=16447992;border="none")
winform.add(
bk={cls="bk";text="ImTip - AI 智能助手";left=22;top=5;right=213;bottom=20;align="left";dl=1;dt=1;z=14};
bkPrompt={cls="plus";left=5;top=495;right=754;bottom=617;bgcolor=16777215;border={color=-8388608;radius=12};clip=1;clipBk=false;db=1;disabled=1;dl=1;dr=1;z=2};
bkTitle={cls="bk";left=0;top=0;right=764;bottom=27;bgcolor=14408409;dl=1;dr=1;dt=1;forecolor=6052699;linearGradient=0;z=3};
btnClear={cls="plus";text="清除";left=589;top=588;right=655;bottom=618;align="left";bgcolor=16777215;color=3947580;db=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF014';notify=1;textPadding={left=25};z=6};
btnCopy={cls="plus";text="复制";left=369;top=588;right=433;bottom=618;align="left";bgcolor=16777215;color=3947580;db=1;disabled=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='imtip');padding={left=8}};iconText='\uF0C5';notify=1;textPadding={left=25};z=11};
btnSearch={cls="plus";text="联网";left=8;top=588;right=67;bottom=618;align="left";bgcolor=16777215;color=3947580;db=1;dl=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF26B';notify=1;textPadding={left=25};z=15};
btnSend={cls="plus";text="问 AI";left=660;top=588;right=732;bottom=618;align="left";bgcolor=16777215;color=3947580;db=1;dr=1;font=LOGFONT(h=-13);iconColor=5724159;iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF0AA';notify=1;textPadding={left=25};z=4};
btnSetting={cls="plus";text="设置";left=73;top=588;right=140;bottom=618;align="left";bgcolor=16777215;color=3947580;db=1;dl=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF013';notify=1;textPadding={left=25};z=7};
btnSnap={cls="plus";text="分享";left=302;top=588;right=366;bottom=618;align="left";bgcolor=16777215;color=3947580;db=1;disabled=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF030';notify=1;textPadding={left=25};z=12};
cmbAgent={cls="combobox";left=145;top=592;right=269;bottom=614;db=1;dl=1;edge=1;items={};mode="dropdownlist";z=16};
editMaxTokens={cls="edit";left=509;top=593;right=552;bottom=616;align="right";db=1;dr=1;edge=1;z=9};
editPrompt={cls="richedit";left=7;top=501;right=750;bottom=585;autohscroll=false;bgcolor=16777215;db=1;dl=1;dr=1;link=1;multiline=1;vscroll=1;z=5};
spinMaxTokens={cls="spin";left=553;top=594;right=573;bottom=616;db=1;dr=1;z=8};
splitter={cls="splitter";left=-2;top=490;right=760;bottom=495;bgcolor=13750737;db=1;dl=1;dr=1;horz=1;z=13};
static={cls="static";text="回复长度：";left=434;top=591;right=500;bottom=614;align="right";bgcolor=16777215;center=1;clipch=1;db=1;dr=1;z=10};
wndBrowser={cls="custom";text="自定义控件";left=5;top=27;right=753;bottom=489;ah=1;db=1;dl=1;dr=1;dt=1;z=1}
)
/*}}*/

var aiChatConfig = ..table.assign({},config.aiChat);

if(config.aiChat.itemNames){
	winform.cmbAgent.items = config.aiChat.itemNames;
}

if(config.aiChat.selItem){
	winform.cmbAgent.selIndex = config.aiChat.selItem;
} 

if(_ARGV.chat){
	
	if(#_ARGV.chat && config.aiChat.itemNames){
		var selIndex = table.find(config.aiChat.itemNames,_ARGV.chat);
		if(selIndex){
			winform.cmbAgent.selIndex = selIndex;
			
			var configItem = config.aiChat.itemData[selIndex];
			if(configItem){
				aiChatConfig.proxy = null;
				table.assign(aiChatConfig,configItem);  
			}
		}
	}
}

//创建显示聊天消虑的 Web 浏览器窗口
import web.form.chat;
var wb = web.form.chat(winform.wndBrowser);
wb.enableKatex(config.aiChat.katex);

//清除上下文
var resetMessages = function(){
	
	wb.clear();
	
	if(#aiChatConfig.systemPrompt){
		//输入系统提示词 
		if( (aiChatConfig.model && ..string.startWith(aiChatConfig.model,"aardio")) ||  
			string.find(aiChatConfig.systemPrompt,"<@@aardio@>|<@@imtip@>|<超级热键>") ){
				wb.chatMessage.aardioSystem(aiChatConfig.systemPrompt);  
		}
		else {
			wb.system( aiChatConfig.systemPrompt) 
		} 		
	} 
	elseif(aiChatConfig.model && ..string.startWith(aiChatConfig.model,"aardio")){
		wb.chatMessage.aardioSystem();
	}
	else {
		wb.system("你是 ImTip 智能 AI 助手，请用中文回答问题")
	}
	
	wb.aiSearched = null;
}

resetMessages();

winform.cmbAgent.onOk = function(){ 
	if(winform.cmbAgent.selIndex){
		var configItem = config.aiChat.itemData[winform.cmbAgent.selIndex];
		if(configItem){
			aiChatConfig.proxy = null;
			table.assign(aiChatConfig,configItem);  
			
			if(!wb.started()){
				resetMessages();
			}
		}		
	}
}

winform.btnClear.oncommand = function(id,event){
	resetMessages();//清除聊天上下文
	winform.editPrompt.setFocus();
}

winform.editPrompt.enablePopMenu(function(){
	return {
		
		{ '问 AI（发送）\tCtrl+Enter';  function(id){
				winform.btnSend.oncommand();
		}; 0}; 
		
		{ /*分隔线*/ };
		
		{ "导出对话";  function(id){
			import fsys.dlg;
			var path = fsys.dlg.save("*.jsonl|*.jsonl||","导出对话到 *.jsonl");
			if(!path) return;
			
			var file,err = io.file(path,"w+b");
			if(!file) return winform.msgboxErr(err);
				
			var chatMessage = wb.chatMessage;
			for(i=1;#chatMessage;1){
				var msg = chatMessage[i]
				var line  = web.json.stringify(msg,false,false);
				line = string.crlf(line,"")
				file.write(line,'\r\n');
			}
			file.close();
			
		}; #wb.chatMessage<2 ? 1/*_MF_GRAYED*/ : 0}; 	
		
		{ '导入对话';  function(id){
			import fsys.dlg;
			var path = fsys.dlg.open("*.jsonl|*.jsonl||","自 *.jsonl 文件导入对话");
			if(!path) return;
			
			wb.importChatMessages(path);
		}; winform.btnSend.text == "停止" ? 1/*_MF_GRAYED*/ : 0}; 
	}
} );

wb.BeforeNavigate2 = function( pDisp, url, flags, targetFrame, postData, headers, cancel ) { 
   
    if(..string.endWith(url,".jsonl",true) && io.exist(url) ){
        winform.setTimeout( 
        	function(){
        		wb.importChatMessages(url)
        	}
        );	
    	
    } 
    else {
    	..raw.execute(url);
    }
    
    return url, flags, targetFrame, postData, headers, true;
} 

winform.onDropFiles = function(files){
	var path = files[1];
	if(..string.endWith(path,".jsonl",true)){
		wb.importChatMessages(path);
	}
}

wb.importChatMessages = function(path){
	var json = string.load(path);
	if(!#json){
		return winform.msgboxErr("无效对话数据")
	}
	
	var messages = web.json.ndParse(json);
	
	if(!#messages){
		return winform.msgboxErr("无效对话数据")
	}
			
	wb.clear();  
	wb.aiSearched = null;
	
	for(i=1;#messages;1){
		var msg = messages[i];
		if(type(msg.content)!="string"){
			
			if(msg[["role"]]!="user"){
				resetMessages();
				return winform.msgboxErr("对话数据格式错误，role 字段的值不是 user 则 content 字段必须是字符串！")
			}
			elseif(!..table.isArray(msg.content)){
				return winform.msgboxErr("对话数据格式错误，content字段只能是字符串或数组！")
			}
		}
		
		if(msg[["role"]]=="system"){
			wb.system(msg.content)
		}
		elseif(msg[["role"]]=="user"){
			wb.prompt(msg.content)
		}
		elseif(msg[["role"]]=="assistant"){
			wb.assistant(msg.content)
		}
		else {
			resetMessages();
			return winform.msgboxErr("对话数据格式错误，role 字段必须是 system,user,assistant 之一。")
		} 
	} 	
}


winform.splitter.origTop = winform.splitter.top;

import thread.event;
var eventStop = thread.event();

//响应按键事件，输入用户提示词
import inet.url;
winform.btnSend.oncommand = function(id,event){
	
	if(winform.btnSend.text == "停止"){
		eventStop.set();
		
		winform.btnSend.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
		return;
	}
	
	var prompt = winform.editPrompt.text;
	if(!#prompt){
		wb.errorMessage("请先输入问题。"); 
		winform.editPrompt.setFocus();
		return;
	}
	
	var tApiUrl = aiChatConfig.url ? inet.url.split(aiChatConfig.url);
	if(!tApiUrl){
		wb.errorMessage(`错误的接口网址，;<a href="javascript:void(0)" onclick="javascript:external.updateApiKey()">点这里重新设置</a>`)
		winform.editPrompt.setFocus();
		return;
	}
	
		//输入 AI 提示词
	wb.prompt( prompt );
	winform.editPrompt.text = "";
	
	//按钮显示等待动画
	winform.btnSend.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
	winform.btnClear.disabled = true;
	winform.btnSnap.disabled = true; 
	
	wb.limit = config.aiChat.msgLimit;
 
	if(wb.aiSearched 
		|| (aiChatConfig.model && ( ..string.endWith(aiChatConfig.model,":online")  ||  ..string.startWith(aiChatConfig.model,"aardio") ) ) 
	){
	
	}
	elseif( (config.search[["mode"]]=="exa" && config.search.exa )
		||(config.search[["mode"]]=="tavily" && config.search.tavily ) ){
			
		wb.showLoading("正在联网搜索");
		
		import web.turndown; 
		var ok = thread.invokeAndWait( function(wb,prompt,searchConfig){
				import web.rest.jsonClient;;
				
				if(searchConfig.mode=="exa"){
					//导入 Exa 索接口 
					var exaClient = web.rest.jsonClient(); 
					exaClient.setHeaders({ "x-api-key": searchConfig.exa.key} )
					var exa = exaClient.api("https://api.exa.ai/");
					
					//搜索
					var searchData,err = exa.search({
    					query: prompt,
    					contents={text= true},
    					numResults: searchConfig.exa.count || 2, 
    					includeDomains: searchConfig.exa.includeDomains,
    					excludeDomains: !searchConfig.exa.includeDomains ? searchConfig.exa.excludeDomains : null,
    					type:"keyword" //一般 keyword 搜索就够了（价格低一些）
					}) 
					
					var ret  = searchData[["results"]]
					if(ret){
						wb.url(ret);	
						return true;
					}
					elseif(err){
						wb.errorMessage(err); 
					}		
				}
				elseif(searchConfig.mode=="tavily"){
					var http = web.rest.jsonClient();  
					http.setAuthToken(searchConfig.tavily.key); 
					var tavily = http.api("https://api.tavily.com");
  	
					//搜索
					var searchData,err = tavily.search({ 
    					query =  prompt,
    					includeDomains = searchConfig.exa.includeDomains,
    					excludeDomains: !searchConfig.exa.includeDomains ? searchConfig.exa.excludeDomains : null,
    					max_results =  searchConfig.exa.count || 2 //返回的搜索结果数量，不必要太多，前两三条就可以了
					})
					
					//将搜索结果添加到系统提示词
					var ret = searchData[["results"]]
					if(ret){
						wb.url(ret);	
						return true;
					}
					elseif(err){
						wb.errorMessage(err);
					}	
				} 		
			},wb,prompt,config.search) 
			
			if(!ok){
				
				winform.btnSend.disabledText = null;
				winform.btnClear.disabled = false; 
				winform.btnSnap.disabled = false;
				winform.chkFix.disabled = false;
				
				return;
			}
			
			wb.aiSearched = true;
			wb.showLoading("正在思考")
	} 
	
    var knowledge = ""
	prompt = string.replace(prompt,`(https?\://[^\s()"']+)`,
		function(url){
		 
		 	if(!..string.match(url,"<@@.js@>|<@@.css@>|<@@.jpg@>|<@@.png@>|<@@.gif@>|<@@.webp@>$") ){
		 		
				wb.showLoading("正在读取与转换网页数据："+url)
				
				import web.turndown;
				var md,err = web.turndown.httpGet(url)
				if(!#md) return;
 	
				md = '\r\n\r\n用户输入的参考网址：' + url 
					+  '\r\n\r\n下面是自该网址获取的' +(err?" Markdown ":"文本")+'格式内容：'
					+  '\r\n\r\n' + md +'\r\n\r\n------------------------\r\n\r\n'
		 	
				knowledge = knowledge ++ md;
			}
		});
	
	if(#knowledge){
		wb.system(knowledge)
		
		if(string.match(prompt,`^\s*(https?\://[^\s()"']+)\s*$`)){
			prompt = "解读分析与总结要点 " + prompt;
		}
	} 
 
	config.aiChat.maxTokens = winform.spinMaxTokens.pos; 
	
	winform.splitter.splitAt(winform.splitter.origTop+80);
	
	eventStop.reset();
	
	var loading = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250' }
	winform.btnSend.disabledText = null;
	winform.btnSend.text = "停止" 
	winform.btnSend.reduce(loading,function(value,index){
		if(value) winform.btnSend.iconText = value;
		return 150;
	} )
	
	//创建多线程向服务端发送请求
	thread.invoke( 
		function(wb,config,eventStop){ 
			
			for(k,v in config){ 
				if(v==="")config[k] = null;
			} 
		 
			config = table.mix(config,{  
				url = "https://ai.aardio.com/api/v1/";
				key = '\0\1\96';
				model = "imtip";
				temperature = 0.5;
			}); 

			//导入调用 HTTP 接口的 REST 客户端
			import web.rest.aiChat;
			
			config.userAgent = "Mozilla/5.0 (Windows NT "+ _WIN_VER_MAJOR +"."+_WIN_VER_MINOR+"; ImTip) like Gecko";
			var client = web.rest.aiChat(config);
			
			client.referer = "https://imtip.aardio.com";
			client.setHeaders({ "X-Title":"ImTip"});
			 
			var ok,err = client.messages(wb.chatMessage,function(deltaText,deltaReasoning){
				if(eventStop.wait(0)){
					return  false; 
				}
				
				if(#deltaReasoning){
					wb.showThinking(deltaReasoning);
					return;
				}
				
				wb.assistant(deltaText);
			} );
			
			if(err){
				//获取错误对象（解析 JSON 格式的错误信息）
				var errObject = client.lastResponseError()
				if(errObject[["error"]][["type"]] == "authentication_error" ){
					wb.errorMessage(`API 密钥错误！<a href="https://imtip.aardio.com/api-keys/">点这里获取密钥</a>，&nbsp;<a href="javascript:void(0)" onclick="javascript:external.updateApiKey()">点这里设置新密钥</a>`)
				}
				else {
					wb.errorMessage(err)
				}
			}
			elseif(!ok){
				wb.errorMessage("错误代码：" + ( client.lastStatusCode : "未知 " + (client.lastResponseString() || "")))
			}
			elseif(config.usage){
				var last = client.lastResponseObject()
  
				if(last){
					var out = ""
	
					var usage = last.usage || last["amazon-bedrock-invocationMetrics"]
					if(usage){
						var cTokens,pTokens,cacheTokens;
						if(client.apiMode=="aliyun"){
							usage = usage[["models"]][[1]];
							cTokens = usage.output_tokens
							pTokens = usage.input_tokens;
						}
						else {
							cTokens = usage.completion_tokens || usage["outputTokenCount"]
							pTokens = usage.prompt_tokens || usage.inputTokenCount || usage.input_tokens;
							cacheTokens = usage.prompt_cache_hit_tokens
						}
						 
						if(cTokens){
							out = out + '回复 tokens:<code>' + ..math.size64(cTokens).format() + "</code> "
						}
						 
						if(pTokens){
							out = out + '提示 tokens:<code>' + ..math.size64(pTokens).format() + "</code> "
						}
						
						if(cacheTokens){
							out = out + '缓存 tokens:<code>' + ..math.size64(cacheTokens).format() + "</code> "
						} 
						
						if( string.match( config.url,"<@@https://api.deepseek.com/v1@>" )){
							
							if( config.model!="deepseek-reasoner"){ 
								if( time() < time("2025/02/09 00:00:00")){
									out = out + '本次费用:<code>' 
										+ math.round(((pTokens-cacheTokens)*1+cacheTokens*0.1+cTokens*2)/1000000,3) 
										+  " 元 </code>"	
								}
								else {
									out = out + '本次费用:<code>' 
										+ math.round(((pTokens-cacheTokens)*2+cacheTokens*0.5+cTokens*8)/1000000,3) 
										+  " 元 </code>"	 
								} 
							}
							else {
								out = out + '本次费用:<code>' 
										+ math.round(((pTokens-cacheTokens)*4+cacheTokens*1+cTokens*16)/1000000,3) 
										+  " 元 </code>"	
							}
							
						}  
						elseif( string.match( config.url,"<@@https://openrouter.ai/api/v1@>" )){
							if( config.model=="anthropic/claude-3.5-sonnet"){
								out = out + '本次费用:<code>' 
									+ math.round((pTokens*3+cTokens*15)/1000000,3) 
									+  " 美元 </code>"	
							} 
							elseif( ..string.endWith(config.model,":free") ){
								out = out + "本次费用:<code> 0 美元 </code>"
							}
						} 
						elseif( string.match( config.url,"<@@https://api.siliconflow.cn/v1@>" )){
						 
							if( config.model=="deepseek-ai/DeepSeek-V3"){ 
								if( time() < time("2025/02/09 00:00:00")){
									out = out + '本次费用:<code>' 
										+ math.round((pTokens*1+cTokens*2)/1000000,3) 
										+  " 元 </code>"	
								}
								else {
									out = out + '本次费用:<code>' 
										+ math.round((pTokens*2+cTokens*8)/1000000,3) 
										+  " 元 </code>"	 
								} 
							}
							elseif( config.model == "deepseek-ai/DeepSeek-R1") {
								out = out + '本次费用:<code>' 
										+ math.round((pTokens*4+cTokens*16)/1000000,3) 
										+  " 元 </code>"	
							}
						}
					}
					
					if(last.error){
						wb.errorMessage( last.error[["message"]] || ..web.json.stringify(last.error,true,false) ) 
					}
					else {
						wb.errorMessage(#out ? out : "模型未提供 token 用量")
					} 
				}
				else { 
					wb.errorMessage("模型未提供 token 用量")
				} 
			} 
		},wb,aiChatConfig,eventStop//将参数传入线程
	)
	
	winform.btnCopy.disabled = false; 
	winform.editPrompt.setFocus();
}

//在 AI 回复结束后回调此函数
wb.onWriteEnd = function(){
	winform.btnSend.disabledText = null;
	winform.btnSend.reduce(false);
	
	winform.btnSend.text = "问 AI";
	winform.btnSend.iconText = '\uF0AA';
	
	winform.btnClear.disabled = false;
	winform.btnCopy.disabled = false; 
	winform.btnSnap.disabled = false; 
	winform.editPrompt.setFocus();
}

//导出 aardio 函数到网页 JavaScript 中。
wb.external = {
	updateApiKey = function(){
		winform.btnSetting.oncommand();
	} 
}

import key;
import win.clip;
winform.btnCopy.oncommand = function(id,event){
	var md = wb.lastMarkdown();
	if(!#md) return winform.msgboxErr("消息为空。");
	
	if(key.getState("CTRL")){
		
		var found;
		for indent,_,code in string.gmatch(md,"!\N([ \t]*)(```+)<\w+>(.+?)!\N\s*\2![^`\S]") { 
			
			if(#indent){ 
				text = string.replace(text,"\n+"+indent,'\n');
			}	
		 
		    win.clip.write( code );
		    found = true;
		}
		
		if(!found){
			return winform.msgboxErr("没有找到代码块。");	
		} 
	}
	else{ 
		win.clip.write( md )
	}
	
	winform.btnCopy.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250';text=''} 
	thread.delay(600);
	winform.btnCopy.disabledText = null;
	winform.editPrompt.setFocus();
}

//设置接口地址与 API 令牌的窗口
winform.btnSetting.oncommand = function(id,event){
	var frmSetting = win.form(text="ImTip - 设置 AI 聊天助手";right=686;bottom=590;border="dialog frame";exmode="none";max=false;min=false;mode="popup")
	frmSetting.add(
		btnAdd={cls="plus";left=18;top=473;right=52;bottom=503;align="left";color=3947580;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF067';notify=1;textPadding={left=25};z=10};
		btnEdit={cls="plus";left=93;top=473;right=127;bottom=503;align="left";color=3947580;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF044';notify=1;textPadding={left=25};z=12};
		btnRemove={cls="plus";left=56;top=473;right=90;bottom=503;align="left";color=3947580;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF1F8';notify=1;textPadding={left=25};z=11};
		btnSave={cls="button";text="更新配置";left=489;top=531;right=659;bottom=576;z=5};
		chkKatex={cls="checkbox";text=" 解析数学公式";left=55;top=526;right=182;bottom=546;z=15};
		chkUsage={cls="checkbox";text="显示 token 计数";left=185;top=526;right=349;bottom=546;z=24};
		editApiKey={cls="edit";left=281;top=68;right=662;bottom=95;edge=1;password=1;z=2};
		editApiUrl={cls="combobox";left=281;top=31;right=662;bottom=57;edge=1;items={};mode="dropdown";z=18};
		editModel={cls="combobox";left=281;top=106;right=662;bottom=132;edge=1;items={};mode="dropdown";vscroll=1;z=25};
		editProxy={cls="edit";left=281;top=178;right=662;bottom=205;edge=1;z=19};
		editSystemPrompt={cls="edit";left=281;top=220;right=662;bottom=485;edge=1;hscroll=1;multiline=1;vscroll=1;z=21};
		groupbox={cls="groupbox";text="选择当前配置：";left=9;top=6;right=675;bottom=513;edge=1;z=1};
		lbMsgLimit={cls="static";left=423;top=546;right=451;bottom=566;transparent=1;z=16};
		lbTemperature={cls="static";left=633;top=140;right=659;bottom=160;transparent=1;z=17};
		lstConfig={cls="listbox";left=18;top=34;right=187;bottom=464;edge=1;hscroll=1;items={};vscroll=1;z=9};
		static={cls="static";text="API key：";left=196;top=73;right=279;bottom=94;align="right";transparent=1;z=3};
		static2={cls="static";text="模型 ID：";left=196;top=109;right=279;bottom=130;align="right";transparent=1;z=4};
		static3={cls="static";text="不会联网读取系统提示词内的超链接，建议直接添加文档内容";left=282;top=489;right=649;bottom=508;color=5921370;transparent=1;z=23};
		static4={cls="static";text="接口地址：";left=196;top=36;right=279;bottom=57;align="right";transparent=1;z=6};
		static5={cls="static";text="temperature：";left=196;top=146;right=279;bottom=167;align="right";transparent=1;z=8};
		static6={cls="static";text="上下文轮数：";left=33;top=560;right=128;bottom=592;align="right";transparent=1;z=14};
		static7={cls="static";text="代理服务器：";left=196;top=182;right=279;bottom=203;align="right";transparent=1;z=20};
		static8={cls="static";text="系统提示词：";left=196;top=219;right=279;bottom=240;align="right";transparent=1;z=22};
		tbMsgLimit={cls="trackbar";left=132;top=552;right=415;bottom=582;max=100;min=0;z=13};
		tbTemperature={cls="trackbar";left=281;top=136;right=631;bottom=166;max=100;min=0;z=7}
	)
	
	frmSetting.editModel.setCueBannerText("模型名前加 @ 使用 Anthropic 接口，否则使用 OpenAI 接口")
	frmSetting.editProxy.setCueBannerText("socks=127.0.0.1:1081")
	frmSetting.editSystemPrompt.limit = -1;
	
	frmSetting.editApiUrl.items = {
		"https://ai.aardio.com/api/v1/",
		"https://api.deepseek.com/v1",
		"https://openrouter.ai/api/v1",
		"https://ark.cn-beijing.volces.com/api/v3/bots",
		"https://ark.cn-beijing.volces.com/api/v3",
		"https://api.siliconflow.cn/v1",
		"https://api.anthropic.com/v1",
		"https://generativelanguage.googleapis.com/v1beta/openai", 
		"https://api.x.ai/v1",
		"https://api.openai.com/v1", 
		"https://api.lkeap.cloud.tencent.com/v1",
		"https://dashscope.aliyuncs.com/api/v1/",
		"http://localhost:11434/v1/"
	}
	
	frmSetting.editApiUrl.onFocusLost = function(){
		var url = string.trim(frmSetting.editApiUrl.text,`"' 	`);
		if(#url && !..string.match(url,"^<@@http@>[sS]?\:")){
			frmSetting.editApiUrl.text = (string.startWith(url,"localhost")?"http://":"https://")+url;
		}
	}
	
	import web.rest.aiChat;
	
	var cacheModelList = {};
	frmSetting.editModel.onDropDown = function(){ 
		var url = string.trim(frmSetting.editApiUrl.text,`"' 	`); 
		var apiKey = string.trim(frmSetting.editApiKey.text,`"' 	`);

		if(#url && #apiKey){
			
			if(!cacheModelList[url]){
				var aiClient = web.rest.aiChat({
					url = url;
					key = apiKey;
					proxy = string.trim(frmSetting.editProxy.text);
					model = "";
				});
				aiClient._http.setTimeouts(500,500,500);
				var models = aiClient.listModels();
				
				if(models[[1]][["id"]]){ 
					cacheModelList[url] = ..table.map(models,lambda(v) v["id"] ) 
				}	
				else {
					cacheModelList[url] = {}
				}
				
			}
			
			if(#cacheModelList[url]){
				frmSetting.editModel.autoComplete(cacheModelList[url],1 ); 
				return;
			}
		
		}	
		
		frmSetting.editModel.items = {};	
	}
	
	frmSetting.editApiUrl.onListChange = function(){ 

		var url = frmSetting.editApiUrl.selText;

		if(url=="https://ai.aardio.com/api/v1/"){
			frmSetting.editModel.text = "aardio"
		}
		elseif(url=="https://api.deepseek.com/v1"){
			frmSetting.editModel.text = "deepseek-chat"
		}
		elseif(url=="https://api.siliconflow.cn/v1"){
			frmSetting.editModel.text = "deepseek-ai/DeepSeek-V3"
		}
		elseif(url=="https://openrouter.ai/api/v1"){
			frmSetting.editModel.text = "google/gemini-2.0-flash-exp:free //或 anthropic/claude-3.5-sonnet"
		}
		elseif(url=="https://api.anthropic.com/v1"){
			frmSetting.editModel.text = "@claude-3-5-sonnet-latest"
		}
		elseif(url=="https://generativelanguage.googleapis.com/v1beta/openai"){
			frmSetting.editModel.text = "gemini-exp-1206"
		}
		elseif(url=="https://api.x.ai/v1"){
			frmSetting.editModel.text = "grok-2-1212"
		}
		elseif(url=="https://api.openai.com/v1"){
			frmSetting.editModel.text = "chatgpt-4o-latest"
		}
		elseif(url=="https://ark.cn-beijing.volces.com/api/v3/bots"){
			frmSetting.editModel.text = "bot- //智能体  ID"
		}
		elseif(url=="https://ark.cn-beijing.volces.com/api/v3"){
			frmSetting.editModel.text = "ep- //接入点 ID"
		}
		elseif(url=="https://dashscope.aliyuncs.com/api/v1/"){
			frmSetting.editModel.text = "qwen-coder-plus //也可以指定智能体应用 ID" //qwen-coder-plus-latest
		}
		elseif(url=="http://localhost:11434/v1/"){
			frmSetting.editModel.text = "qwen:0.5b //Ollama 本地模型"
		}
	}

	frmSetting.tbMsgLimit.setRange(3,100);
	frmSetting.tbTemperature.setRange(0,10);
	frmSetting.tbTemperature.oncommand = function(id,event,pos){
 	
		var pos = frmSetting.tbTemperature.pos; 
		frmSetting.tbTemperature.tooltip = pos / 10; 
		frmSetting.lbTemperature.text = pos / 10; 
	}
	
	frmSetting.tbMsgLimit.oncommand = function(id,event,pos){
 	
		frmSetting.lbMsgLimit.text = frmSetting.tbMsgLimit.pos;;  
	}

	import win.ui.listEdit;
	var listEdit = win.ui.listEdit(frmSetting.lstConfig);
	listEdit.editBox.setCueBannerText("请输入配置名",true);

	if(!#config.aiChat.itemNames) {
		config.aiChat.itemNames = {"默认"}
		config.aiChat.itemData = {{
			url = config.aiChat.url || "https://api.deepseek.com/v1";
			key = config.aiChat.key;
			model = #config.aiChat.model ? config.aiChat.model : "deepseek-chat";
			temperature = config.aiChat.temperature;		
		}};
	} 
	
	frmSetting.lstConfig.onSelChange = function(){
		var selIndex = frmSetting.lstConfig.selIndex; 
		
		if(config.aiChat.selItem && config.aiChat.selItem != selIndex){
			//保存上一个配置
			var configItem = {
				url = frmSetting.editApiUrl.text;
				key = string.trim(frmSetting.editApiKey.text,`"' 	`);
				model = ..string.match(frmSetting.editModel.text,"\s*(\S+)");
				temperature = frmSetting.tbTemperature.pos / 10;
				msgLimit = frmSetting.tbMsgLimit.pos;
				proxy = string.trim(frmSetting.editProxy.text);
				systemPrompt = frmSetting.editSystemPrompt.text;
			}  
		
			config.aiChat.itemData[config.aiChat.selItem] = configItem; 		
		} 
		
		//加载下一个配置
		var selIndex = frmSetting.lstConfig.selIndex; 
		var configItem = config.aiChat.itemData[selIndex] || {};
		
		import string.escape2;
		configItem.key = ..string.escape2.unescape(configItem.key)
		frmSetting.editApiKey.text = ..string.escape2.escape(configItem.key)
		
		
		frmSetting.editApiUrl.text = configItem.url; 
		frmSetting.editProxy.text = configItem.proxy;
		frmSetting.editSystemPrompt.text = configItem.systemPrompt || "你是 AI 助手，请用中文回答问题";
		
		if(configItem.temperature===null) configItem.temperature = 0.1; 
		frmSetting.tbTemperature.pos = configItem.temperature * 10;
		frmSetting.tbTemperature.tooltip = configItem.temperature; 
		frmSetting.lbTemperature.text = configItem.temperature; 
		
		frmSetting.tbMsgLimit.pos = configItem.msgLimit || 15;
		frmSetting.lbMsgLimit.text = configItem.msgLimit || 15; 
		
		frmSetting.editModel.text = configItem.model; 
		
		config.aiChat.proxy = null;
		table.assign(config.aiChat,configItem);
		
		config.aiChat.itemData[selIndex] = configItem;
		config.aiChat.itemNames = frmSetting.lstConfig.items; 
		
		var currentSelIndex = winform.cmbAgent.selIndex;
		winform.cmbAgent.items = config.aiChat.itemNames;
		winform.cmbAgent.selIndex = currentSelIndex;
		
		config.aiChat.itemData = table.slice(config.aiChat.itemData,1,#config.aiChat.itemNames);
		config.aiChat.selItem = selIndex; 
		  
		config.aiChat.save();	
	}
	
	frmSetting.lstConfig.items = config.aiChat.itemNames;
	frmSetting.lstConfig.selIndex = config.aiChat.selItem || 1;
	frmSetting.lstConfig.onSelChange();
	frmSetting.chkKatex.checked = config.aiChat.katex;
	frmSetting.chkUsage.checked = config.aiChat.usage;
	
	//保存并更新配置
	import inet.url;
	frmSetting.btnSave.oncommand = function(id,event){
	 
		var configItem = {
			url = string.trim(frmSetting.editApiUrl.text);
			key = string.trim(frmSetting.editApiKey.text,`"' 	`);
			model = ..string.match(frmSetting.editModel.text,"\s*(\S+)");
			temperature = frmSetting.tbTemperature.pos / 10;
			msgLimit = frmSetting.tbMsgLimit.pos;
			proxy = string.trim(frmSetting.editProxy.text);
			systemPrompt = frmSetting.editSystemPrompt.text;
		}
		
		if(!#configItem.url){
			frmSetting.editApiUrl.editBox.showWarningTip("ImTip","请输入接口网址！")
			return; 
		}
		
		if( string.match(configItem.proxy,"^[\w\-_\.]+$") && !(#configItem.model) ){
			frmSetting.editProxy.showWarningTip("ImTip","是否将模型 ID 输入到代理服务器了呢？！")
			return;
		}
		
		if(!(#configItem.model)){
			frmSetting.editModel.editBox.showWarningTip("ImTip","请输入模型 ID ！")
			return;
		}
		
		import string.escape2;
		configItem.key = ..string.escape2.unescape(configItem.key)
		
		if(!#configItem.proxy){
			configItem.proxy = null;
		}
		
		var tUrl = inet.url.split(configItem.url); 
		if(tUrl[["host"]]=="api.anthropic.com"){
			if(configItem.model[1]!='@'#){
				configItem.model = '@' + configItem.model;
			}
		}
		elseif(tUrl[["host"]]=="generativelanguage.googleapis.com"){
			configItem.url = "https://generativelanguage.googleapis.com/v1beta/openai"
		}
		
		var selIndex = frmSetting.lstConfig.selIndex;
		config.aiChat.selItem = selIndex; 
		config.aiChat.itemData[selIndex] = configItem;
		
		table.assign(aiChatConfig,configItem);  
		winform.cmbAgent.selIndex = selIndex; 
		
		config.aiChat.proxy = null;
		table.assign(config.aiChat,configItem);  
		
		config.aiChat.katex = frmSetting.chkKatex.checked;
		wb.enableKatex(config.aiChat.katex);
		 
		config.aiChat.usage = frmSetting.chkUsage.checked;
		config.aiChat.save();
		
		frmSetting.endModal();
		
		if(!wb.started()){
			resetMessages();
		}
		else {
			
			var md = wb.getMarkdown();
			wb.write(md);
		}
		
		thread.delay(100)
		winform.editPrompt.setFocus();
	}
	
	frmSetting.btnEdit.oncommand = function(id,event){
		listEdit.beginEdit();
	}
	
	frmSetting.btnAdd.oncommand = function(id,event){
		listEdit.beginEdit(0);	
	}
	
	frmSetting.btnRemove.oncommand = function(id,event){
		
		var selIndex = frmSetting.lstConfig.selIndex;
		 
		..table.remove(config.itemData,selIndex);
		..table.remove(config.itemNames,selIndex);
		frmSetting.lstConfig.delete(selIndex)
		
		selIndex = selIndex<=frmSetting.lstConfig.count ? selIndex : selIndex -1;
		  
		config.selItem = null;
		frmSetting.lstConfig.selIndex = selIndex;
		frmSetting.lstConfig.onSelChange() 
	}	
	
	listEdit.onEditChanged = function(newText,selIndex){
		config.aiChat.itemNames = frmSetting.lstConfig.items; 
		
		frmSetting.lstConfig.selIndex = selIndex;
		frmSetting.lstConfig.onSelChange();
		
		config.aiChat.save();	
	}
	
	frmSetting.btnAdd.skin({
		color={
			active=0xFF00FF00;
			default=0xFF3C3C3C;
			disabled=0xFF6D6D6D;
			hover=0xFFFF0000		
		}
	})
	
	frmSetting.btnRemove.skin({
		color={
			active=0xFF00FF00;
			default=0xFF3C3C3C;
			disabled=0xFF6D6D6D;
			hover=0xFFFF0000		
		}
	})
	
	frmSetting.btnEdit.skin({
		color={
			active=0xFF00FF00;
			default=0xFF3C3C3C;
			disabled=0xFF6D6D6D;
			hover=0xFFFF0000		
		}
	})
	
	if(wb.documentMode<11){
		frmSetting.chkKatex.checked = false;
		frmSetting.chkKatex.disabled = true;
	}
	
	frmSetting.doModal(winform);
	winform.editPrompt.setFocus();
}

wb.write(`
- 支持联网读取用户提示词中的网页链接，自动转换为结构化文本。
- <a href="https://imtip.aardio.com/api-keys/">点这里获取接口密钥（API key）</a>
- <a href="javascript:void(0)" onclick="javascript:external.updateApiKey()">设置 API key，添加 / 切换 API 助手</a>
- <a href="https://www.aardio.com/zh-cn/doc/library-guide/std/key/hotkey.html#imtip-ai-chat">编程启动 AI 助手</a>
- <a href="https://www.aardio.com/zh-cn/doc/library-guide/std/key/hotkey.html#ai">超级热键 + 沉浸式 AI 助手</a>  
- 按住 ``Shift`` + 单击托盘直接启动 AI 助手。
- 按住 ``Ctrl+Enter`` 可直接发送问题 
- 按住 ``Ctrl`` 键点 ``复制`` 可复制 AI 最后输出的代码块。
- 按住 ``Ctrl`` 键点 ``分享`` 可截长屏到剪贴板。 
- 输入框右键菜单可导出对话，拖拽 jsonl 文件到窗口可导入对话。
`)


//默认设置输入框焦点
winform.editPrompt.setFocus();

//拆分界面
winform.splitter.split(winform.wndBrowser,{winform.bkPrompt,winform.editPrompt});

winform.splitter.ltMin = 200;
winform.splitter.rbMin = 70;

var scrollbarHeight = ::User32.GetSystemMetrics(3/*_SM_CYHSCROLL*/)
winform.editPrompt.onOk = function(ctrl,alt,shift){ 
	if(ctrl){
		winform.btnSend.oncommand();
		return true; 
	} 

	var pt = ::POINT()
	::User32.GetCaretPos(pt) 
	
	var lineCount = winform.editPrompt.lineCount;
	var lineHeight = math.ceil(pt.x / lineCount + winform.dpiScale(5)); 
	  
	if(pt.y+(lineHeight+scrollbarHeight)*3>winform.editPrompt.height){  
 
		winform.wndBrowser.setRedraw(false)
		winform.splitter.splitMove(-lineHeight) 
		winform.wndBrowser.setRedraw(true) 
	}
}

global.onError = function( err,over ){ 
    if(!over){
        import debug;
        var stack = debug.traceback(,"调用栈",3);
        err = string.concat(err,stack);
    }
    
    if( _STUDIO_INVOKED ) {
    	import win;
    	win.msgboxErr(err);
    }
}

winform.spinMaxTokens.buddy = winform.editMaxTokens;
winform.spinMaxTokens.setRange(1,1024*8);
winform.spinMaxTokens.pos = config.aiChat.maxTokens || 1024;
winform.spinMaxTokens.inc = 1024;

winform.beforeDestroy = function(){
    config.aiChat.maxTokens = winform.spinMaxTokens.pos;
}

winform.btnSnap.oncommand = function(id,event){
	import fsys.dlg;
	import web.form.snap; 
	
	if(key.getState("CTRL")){
		winform.btnSnap.disabled = true;
		
		web.form.snap(wb,function(bmp){
				var hbmp = bmp.copyHandle();
				win.clip.writeBitmap(hbmp,true);
				return true;
		} );  
	}
	else{
		var path = fsys.dlg.save("*.jpg|*.jpg","AI 聊天助手 - 保存对话截图",,winform);
		if(!path) return;
		 
		winform.btnSnap.disabled = true;
		
		web.form.snap(wb,path); 
		winform.editPrompt.setFocus();
	}
	
	wb.doScript(`document.documentElement.scrollTop = document.documentElement.scrollHeight + 50;`);
 
	thread.delay(1000);
	winform.btnSnap.disabled = false;
	winform.editPrompt.setFocus();
}

winform.btnSearch.oncommand = function(id,event){
	
	var frmSearch = winform.loadForm("\dlg\frmSearch.aardio"); 
	frmSearch.doModal(winform);
	
	winform.editPrompt.setFocus();
}

winform.btnSearch.skin({
	color={
		active=0xFF00FF00;
		default=0xFF3C3C3C;
		disabled=0xFF999999;
		hover=0xFFFF0000		
	}
})

//按钮外观样式
winform.btnClear.skin({
	color={
		active=0xFF00FF00;
		default=0xFF3C3C3C;
		disabled=0xFF999999;
		hover=0xFFFF0000		
	}
})

//按钮外观样式
winform.btnSend.skin({
	color={
		active=0xFF00FF00;
		default=0xFF3C3C3C;
		disabled=0xFF999999;
		hover=0xFFFF0000		
	}
})

//按钮外观样式
winform.btnSetting.skin({
	color={
		active=0xFF00FF00;
		default=0xFF3C3C3C;
		disabled=0xFF999999;
		hover=0xFFFF0000		
	}
})

winform.btnCopy.skin({
	color={
		active=0xFF00FF00;
		default=0xFF3C3C3C;
		disabled=0xFF999999;
		hover=0xFFFF0000		
	}
})

winform.btnSnap.skin({
	color={
		active=0xFF00FF00;
		default=0xFF3C3C3C;
		disabled=0xFF999999;
		hover=0xFFFF0000		
	}
})

import win.ui.simpleWindow;
win.ui.simpleWindow(winform);

winform.bkPrompt.directDrawBackgroundOnly();
winform.show();

if(_ARGV.chat){
	if(#_ARGV.q){
		if(..string.endWith(_ARGV.q,".jsonl",true) && ..io.exist(_ARGV.q)){
			wb.importChatMessages(_ARGV.q)
		}
		else{
			winform.editPrompt.text = _ARGV.q;
			winform.setTimeout(function(){
				winform.btnSend.oncommand();
			});
		}
		
		..win.showForeground(winform.hwnd);
	}
}

win.loopMessage();