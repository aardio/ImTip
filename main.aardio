
/*启动参数{{*/
_IMTIP_APP = true;
if(_ARGV.chat){ 
	loadcodex("\dlg\aiChat.aardio");
	return; 
}

for(k,v in _ARGV){
	if(string.endWith(v,".aardio",true)){
		if(io.exist(v)){
			__argvImTipConfig = v;
		}
	}
}
/*}}*/

import style;
import fonts.imtip;
import win.ui.atom;
import win.ui;
import win.dlg.message;
import fonts.fontAwesomeSub;
/*DSG{{*/
mainForm = win.form(text="ImTip 7.3 - 智能桌面助手";right=645;bottom=397;bgcolor=16777215;border="dialog frame";max=false;min=false)
mainForm.add(
btnAiChat={cls="plus";text="AI 智能助手";left=36;top=233;right=179;bottom=263;align="left";bgcolor=11580047;db=1;dl=1;font=LOGFONT(h=-14);iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=10;top=1}};iconText='\uF007';notify=1;tabstop=1;textPadding={left=29};z=9};
btnFilterWindows={cls="plus";text="编辑规则";left=529;top=186;right=622;bottom=215;align="left";color=3947580;db=1;disabled=1;dr=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=8}};iconText='\uF044';notify=1;textPadding={left=25};z=12};
btnHotkey={cls="plus";text="编辑超级热键";left=36;top=40;right=179;bottom=70;align="left";bgcolor=11580047;dl=1;dt=1;font=LOGFONT(h=-14);iconStyle={align="left";font=LOGFONT(h=-16;name='imtip');padding={left=10;top=1}};iconText='\uE8CE';notify=1;tabstop=1;textPadding={left=29};z=6};
btnImTip={cls="plus";text="配置输入提示";left=36;top=186;right=179;bottom=216;align="left";bgcolor=11580047;db=1;dl=1;font=LOGFONT(h=-14);iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=10;top=1}};iconText='\uF0F6';notify=1;tabstop=1;textPadding={left=29};z=8};
chkFilterWindows={cls="plus";text="启用扩展规则";left=417;top=186;right=524;bottom=215;align="left";db=1;dr=1;iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={top=1}};iconText='\uF0C8 ';notify=1;tabstop=1;textPadding={left=20};z=13};
chkHotkey={cls="plus";text="启用超级热键";left=193;top=41;right=389;bottom=70;align="left";dl=1;dr=1;dt=1;iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={top=1}};iconText='\uF0C8 ';notify=1;tabstop=1;textPadding={left=20};z=7};
chkImeBarDisabled={cls="plus";text="启用输入提示";left=193;top=186;right=300;bottom=215;align="left";db=1;dl=1;iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={top=1}};iconText='\uF0C8 ';notify=1;tabstop=1;textPadding={left=20};z=15};
chkJab={cls="plus";text="启用 aardio / java.accessBridge 扩展（支持 JetBrains 等 Java 程序窗口）";left=36;top=338;right=525;bottom=367;align="left";db=1;dl=1;dr=1;iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={top=1}};iconText='\uF0C8 ';notify=1;tabstop=1;textPadding={left=20};z=14};
chkSysRun={cls="plus";text="允许开机启动";left=36;top=309;right=601;bottom=338;align="left";db=1;dl=1;dr=1;iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={top=1}};iconText='\uF0C8 ';notify=1;tabstop=1;textPadding={left=20};z=10};
chkWatchFullScreen={cls="plus";text="忽略全屏窗口";left=305;top=186;right=412;bottom=215;align="left";db=1;dl=1;iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={top=1}};iconText='\uF0C8 ';notify=1;tabstop=1;textPadding={left=20};z=11};
group1={cls="plus";left=19;top=24;right=629;bottom=277;align="left";border={color=-16744448;radius=8;width=1};db=1;dl=1;dr=1;dt=1;font=LOGFONT(h=-14);textPadding={left=16};valign="top";z=2};
group2={cls="plus";left=19;top=296;right=629;bottom=380;align="left";border={color=-16744448;radius=8;width=1};db=1;dl=1;dr=1;font=LOGFONT(h=-14);textPadding={left=16};valign="top";z=1};
groupTitle1={cls="plus";text="软件功能";left=31;top=8;right=107;bottom=34;dl=1;dt=1;z=4};
groupTitle2={cls="plus";text="通用选项";left=36;top=281;right=112;bottom=307;db=1;dl=1;z=5};
lpHotkey={cls="syslink";text='<a href="https://imtip.aardio.com">ImTip</a> 强大的『超级热键』集成 <a href="https://www.aardio.com">aardio</a> 开发环境，可调用 aardio 的全部标准库与扩展库。\n可直接调用大模型 API 接口，支持 <a href="https://www.aardio.com/zh-cn/doc/library-guide/std/key/hotkey.html#ai">将各种桌面应用快速接入 AI 智能助手</a>。\n\n<a href="https://www.aardio.com/zh-cn/doc/?q=library-guide%2Fstd%2Fkey%2Fhotkey.html">ImTip 超级热键开发指南</a>\n<a href="https://www.aardio.com/zh-cn/doc/?q=guide%2Flanguage%2Fsyntax-quick-ref.html">aardio 语法速览</a>';left=62;top=90;right=599;bottom=181;db=1;dl=1;dr=1;dt=1;notify=1;transparent=1;z=3}
)
/*}}*/

var atom,hwnd = mainForm.atom("E474890D-1DFA-4575-B456-7B46C15665DC.imtip");
if(!atom){
	if(__argvImTipConfig) win.sendCopyData(hwnd,__argvImTipConfig );
	else {
		win.sendCopyData(hwnd,"show");
	}
	
	win.quitMessage();	
	return;
}

import fsys.update.simpleMain;
if( fsys.update.simpleMain(
	"ImTip 桌面助手",
	"http://imtip.aardio.com/update/",
	io.appData("/aardio/std/ImTip/app/update"),
	function(version,description,status){})){
	return 0;	
}

mainForm.chkSysRun.skin(style.checkBox); 
mainForm.chkHotkey.skin(style.checkBox);
mainForm.chkJab.skin(style.checkBox);
mainForm.chkFilterWindows.skin(style.checkBox);
mainForm.chkWatchFullScreen.skin(style.checkBox);
mainForm.chkImeBarDisabled.skin(style.checkBox);
mainForm.btnHotkey.skin(style.button);
mainForm.btnAiChat.skin(style.button);
mainForm.btnImTip.skin(style.button);

mainForm.enableDpiScaling("init");

import config;
if(!_ARGV.sys){
	if(!_ARGV.updated){
		mainForm.show()
	}
	else {
		if(!config.setting.runOnce){
			mainForm.show();
			config.setting.runOnce = true;
			config.setting.save();
		}
	}  
}
 
//显示输入状态栏
import key.ime.stateBar;
imeBar = key.ime.stateBar(mainForm);

imeBar.interval = config.setting.interval;
imeBar.timeout = config.setting.timeout;
imeBar.editorClasses = config.setting.editorClasses;
imeBar.quirksMode = config.setting.updateQuirksMode();

//下面创建托盘图标
import win.util.tray;
mainForm.tray = win.util.tray(mainForm)  
mainForm.tray.tip = "ImTip：桌面助手" //设置鼠标提示 

//响应托盘消息
mainForm.onTrayMessage = {
	[0x205/*_WM_RBUTTONUP*/] = function(wParam){ 
		import ui.appTrayMenu;
		var menu = ui.appTrayMenu(mainForm); //延迟创建,避免系统启动时 DPI 缩放前创建菜单
		
	    win.setForeground(mainForm.hwnd); //避免不点击菜单不会消失，父窗口隐藏也要这样做
	    menu.popup(); 
	};
	[0x201/*_WM_LBUTTONDOWN*/] = function(wParam){ 
	 	if(..mainSettingForm) ..mainSettingForm.show(false);
	 	
	 	if(::User32.GetKeyState(0x11/*_VK_CTRL*/) & 0x8000){
	 		..config.setting.imeBarDisabled = !..imeBar.paused; 
			..imeBar.imeWatch(!..config.setting.imeBarDisabled);
			..mainForm.chkImeBarDisabled.checked = !..config.setting.imeBarDisabled;
			..config.setting.save();
			
			win.setForeground(mainForm.hwnd);
	 	}
	 	elseif(::User32.GetKeyState(0x10/*_VK_SHIFT*/) & 0x8000){
	 		mainForm.show(false); 
	 		
	 		import process.imTip; 
			process.imTip(chat = ""); 
	 	}
	 	else {
	 		mainForm.show(); 
	 		win.setForeground(mainForm.hwnd);
	 	} 
		
	};
}

import config;
import app.util;
mainForm.importImTipStyle = function(path){ 
	var buf = string.loadBuffer(path);
	if(!#buf) return mainForm.msgboxErr("此文件不包含有效的 ImTip 外观配置方案!");
	
	var data = string.match(buf,"\/\*ImTipConfig\{\{\*\/(.+)\/\*\}\}\*\/");
	if(!#data) return mainForm.msgboxErr("此文件不包含有效的 ImTip 外观配置方案!");
	
	try{
		var cfg = eval(data);  
		app.util.updateTipStyle(cfg);
		imeBar.imeSkin(cfg);	
		
 		config.style.embeddingFontData = null;
		config.style.embeddingFontName = null; 
		config.style.openStyle = null; 
		config.style.border = null;
		config.style.embeddingFontData = null;
		config.style.embeddingFontName = null; 
		config.style.openStyle = null; 
		config.style.border = null;
		config.style.background = null;
		config.style.foreground = null;
		config.style.linearGradient = null;
		config.style.paddingLeft = null;
		config.style.paddingRight = null;
		config.style.paddingTop = null;
		config.style.paddingBottom = null;
		
 		table.assign(config.style,cfg); 
 		config.style.save();	
	}
	catch(e){
		mainForm.msgboxErr(e);
	} 
}

mainForm.onCopyData = function(data,dataType){
 
	if(data=="start"){
		if(mainSettingForm){
			return win.setForeground(mainSettingForm.hwnd); 
		}
		
		var frmChild = mainForm.loadForm("\dlg\frmSetting.aardio");
		frmChild.show(); 
	}
	elseif(string.endWith(data,".aardio",true) && io.exist(data) ){
		if(mainSettingForm) { 
			win.setForeground(mainSettingForm.hwnd);
			return mainSettingForm.importStyleFromFile(data);
		}
		
		mainForm.importImTipStyle(data);  
	}
	elseif(data=="ime-enable"){
		imeBar.imeWatch(true);
	}
	elseif(data=="ime-disable"){
		imeBar.imeWatch(false);
	}
	elseif(data=="ime-switch"){
		imeBar.imeWatch(!!..imeBar.paused);
	}
	else {
		mainForm.show();
	}
}

mainForm.onClose = function(){
    mainForm.show(false);
    return true; 
} 

if(config.style.width){
	app.util.updateTipStyle(config.style);
	imeBar.imeSkin(config.style)
}

if(__argvImTipConfig){
	win.sendCopyData(mainForm.hwnd,__argvImTipConfig);
}

if(config.hotkey.chkEnableHotkey){
	import app.hotkey;
	app.hotkey.update(true);
}

mainForm.btnImTip.oncommand = function(id,event){
 
	if(..mainHotkeyForm) ..mainHotkeyForm.hitMin(); 
	if(!..mainSettingForm) ..mainSettingForm = ..mainForm.loadForm("\dlg\frmSetting.aardio"); 
	..mainSettingForm.show();  
	mainForm.show(false);
}

mainForm.btnAiChat.oncommand = function(id,event){
	
 	import process.imTip; 
	process.imTip(chat = ""); 
	
	mainForm.show(false);
}

mainForm.btnHotkey.oncommand = function(id,event){
	mainForm.btnHotkey.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250';text=''}
	import app.hotkey;
	app.hotkey.edit();
	
	thread.delay(1500);
	mainForm.btnHotkey.disabledText = null;
	mainForm.show(false);
}

mainForm.chkSysRun.checked = config.setting.sysRun;
mainForm.chkSysRun.oncommand = function(id,event){
	if(_STUDIO_INVOKED){
		error("此功能发布后可用。")
	}
	
	import sys.run;
	import process.admin;
	
	if( process.admin.isRunAs() &&  ! _WINXP ){
		import sys.runAsTask;
		
		sys.run("ImTip").delete();
		
		if(owner.checked){
			sys.runAsTask("ImTip","桌面助手").register("/sys");
			config.setting.sysRunAs = true;
		}
		else {
			sys.runAsTask("ImTip","桌面助手").delete();
			config.setting.sysRunAs = null;
		} 	
		
		mainForm.chkSysRun.text = "允许开机以管理权限启动"
	}
	else{
		if( config.setting.sysRunAs ){
			mainForm.msgboxErr('之前创建的开机启动项拥有管理权限，\n以相同的管理权限启动 ImTip 才能移除。')
			owner.checked = true;
			return ; 
		}
		
		if(owner.checked){
			sys.run("ImTip").register("/sys");
		}
		else {
			sys.run("ImTip").delete()
		} 
		
		mainForm.chkSysRun.text = "允许开机以普通权限启动（当前进程无管理权限）"
	}
	
	config.setting.sysRun = owner.checked;
	config.setting.save();
}

mainForm.chkHotkey.checked = ..config.hotkey.chkEnableHotkey;
mainForm.chkHotkey.oncommand = function(id,event){
	..config.hotkey.chkEnableHotkey = !..config.hotkey.chkEnableHotkey;
	
	import app.hotkey;
	app.hotkey.update(..config.hotkey.chkEnableHotkey);	
} 

var thrdWatcherFilterWindows;
mainForm.btnFilterWindows.skin(style.transButton)
mainForm.btnFilterWindows.oncommand = function(id,event){
	mainForm.btnFilterWindows.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250';text=''}
	
	import app.filterWindows;
	app.filterWindows.edit(); 
	
	thread.delay(1500);
	mainForm.btnFilterWindows.disabledText = null;
}

mainForm.chkFilterWindows.oncommand = function(id,event){
	config.setting.filterWindows = owner.checked;
	config.setting.save();
	
	mainForm.btnFilterWindows.disabled = !config.setting.filterWindows;
	import app.filterWindows;
	app.filterWindows.update();
}
mainForm.chkFilterWindows.checked = config.setting.filterWindows;
if(config.setting.filterWindows){
	import app.filterWindows;
	app.filterWindows.update();
	
	mainForm.btnFilterWindows.disabled = false;
}

mainForm.chkWatchFullScreen.checked = config.setting.watchFullScreen;
mainForm.chkWatchFullScreen.oncommand = function(id,event){
	config.setting.watchFullScreen = owner.checked;
	config.setting.save();
	
	import app.filterWindows;
	app.filterWindows.watchFullScreen(config.setting.watchFullScreen);	
}
if(config.setting.watchFullScreen){
	import app.filterWindows;
	app.filterWindows.watchFullScreen(true);	
}

mainForm.chkImeBarDisabled.oncommand = function( id,event ){
	..config.setting.imeBarDisabled =  !mainForm.chkImeBarDisabled.checked; 
	..imeBar.imeWatch(!..config.setting.imeBarDisabled);
	..config.setting.save();
}

mainForm.chkJab.oncommand = function(id,event){
	if(owner.checked){
		import app.jab;
		owner.checked = app.jab.enable(true);
		
		if(owner.checked){
 			config.setting.jab = true; 
 			mainForm.chkJab.text = "已启用 java.accessBridge 扩展，如未生效请重启目标程序或操作系统"
		}
		else {
			mainForm.chkJab.text = "未启用 java.accessBridge 扩展"
		}
		
	}
	else {
		config.setting.jab = null; 
		mainForm.msgbox("禁用 java.accessBridge 扩展在重启 ImTip 后生效！")
	}
	
	config.setting.save();
	
}

if(config.setting.jab){
	mainForm.chkJab.checked = true;
	import app.jab;
	app.jab.enable(true);
} 

 
if(..config.setting.imeBarDisabled){
	imeBar.imeWatch(false);  
}
else {
	mainForm.chkImeBarDisabled.checked = true; 
}

win.loopMessage();