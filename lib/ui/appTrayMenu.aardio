//appTrayMenu 托盘菜单
import config;
import fsys.dlg;
import ui.doublePinyinMenu;
import tsfInput;
import win.ui.menu;
import win.clip;
import sys.input;

namespace ui;

class appTrayMenu{
	ctor(winform){
		var popmenu = ..win.ui.popmenu(winform);//创建弹出菜单

		popmenu.add("设置",function(){ 
			if(..mainSettingForm) ..mainSettingForm.show(false); 
			
			..mainForm.show();
			..win.setForeground(..mainForm.hwnd);
		})
		
		popmenu.add();//分隔线 
		
		var id = popmenu.add('启用超级热键',function(id){  
		
			..config.hotkey.chkEnableHotkey = !..config.hotkey.chkEnableHotkey;
			..mainForm.chkHotkey.checked = ..config.hotkey.chkEnableHotkey;
			
			import app.hotkey;
			app.hotkey.update(..config.hotkey.chkEnableHotkey);
		});
		popmenu.check(id,!!..config.hotkey.chkEnableHotkey,0/*_MF_BYCOMMAND*/);
		
 
		var id = popmenu.add('启用输入跟踪提示\tCtrl+单击托盘',function(id){
			..config.setting.imeBarDisabled = !..imeBar.paused; 
			..imeBar.imeWatch(!..config.setting.imeBarDisabled);
			..mainForm.chkImeBarDisabled.checked = !..config.setting.imeBarDisabled;
			..config.setting.save();
		});
		popmenu.check(id,!..imeBar.paused,0/*_MF_BYCOMMAND*/);
		 
		popmenu.add();//分隔线 
		
		if(_WIN10_LATER){
			var imStatus = ..tsfInput.getStatus();
			var id = popmenu.add('启用英文键盘',function(id){
				..tsfInput.enableUsKeyboard(!imStatus.en);
			});
			popmenu.check(id,imStatus.en,0/*_MF_BYCOMMAND*/); 
		
			var id = popmenu.add('启用微软拼音',function(id){
				..tsfInput.enablePinyin(!imStatus.pinyin);
			});
			popmenu.check(id,imStatus.pinyin,0/*_MF_BYCOMMAND*/);
		 	
			popmenu.add('└──  双拼方案',..ui.doublePinyinMenu(winform)); 
			
			var id = popmenu.add('启用微软五笔',function(id){
				..tsfInput.enableWubi(!imStatus.wubi);
			});
			popmenu.check(id,imStatus.wubi,0/*_MF_BYCOMMAND*/);
			
			popmenu.add('└──  管理形码词库',function(id){
				import process;
				process.openUrl("http://wubi.aardio.com/");
			}); 
			
			if(imStatus.weasel){ 
				
				if( weaselIsShowNotifications() ){
					popmenu.add('禁用小狼毫自带悬浮提示',function(id){
						weaselShowNotifications(false);
						..mainForm.msgbox("小狼毫自带悬浮提示已关闭。按住 Shift 右键点击托盘图标可显示【启用小狼毫自带悬浮提示】菜单项。","ImTip")
					}); 	
				} 
				elseif(::User32.GetKeyState(0x10/*_VK_SHIFT*/) & 0x8000){
					popmenu.add('启用小狼毫自带悬浮提示',function(id){
						weaselShowNotifications(true);
					}); 
				}
				
			}
			
			popmenu.add();//分隔线
		
			popmenu.add('打开系统输入法设置',function(id){
				..raw.execute("ms-settings:keyboard")
			});
			
			var menuDefTip = ..win.ui.popmenu(winform);
			var id = menuDefTip.add("所有应用使用同一输入法",function(){ 
				..tsfInput.setLocal(!..tsfInput.getLocal());
			})
			menuDefTip.check(id,!..tsfInput.getLocal(),0/*_MF_BYCOMMAND*/);  
			
			var inputMethodOverride = ..tsfInput.getInputMethodOverride();
			var tips = ..sys.input.getEnabledLayoutOrTips();
			if(..table.next(tips)){
				
				for(tip,tipType in tips){
					if(tipType==2/*_LOTP_KEYBOARDLAYOUT*/){
						var desc = ..sys.input.getDescription(tip);
						if(#desc){
							var id = menuDefTip.add(desc,function(){ 
								if(tip!=inputMethodOverride) ..sys.input.setDefault(tip);
								else ..sys.input.setDefault("");
							})
							menuDefTip.check(id,tip==inputMethodOverride,0/*_MF_BYCOMMAND*/);  
						}
					} 
				} 
							
				for(tip,tipType in tips){
					if(tipType==1/*_LOTP_INPUTPROCESSOR*/){
						var desc = ..sys.input.getDescription(tip);
						if(#desc){
							var id = menuDefTip.add(desc,function(){ 
								if(tip!=inputMethodOverride) ..sys.input.setDefault(tip);
								else ..sys.input.setDefault("");
							})
							menuDefTip.check(id,tip==inputMethodOverride,0/*_MF_BYCOMMAND*/);  
						}
					} 
				} 
			}
			
			popmenu.add('设置默认输入法',menuDefTip);   
			popmenu.add();//分隔线
		}
		else{
			
			if(_WIN7_LATER){
				var imStatus = ..tsfInput.getStatus();
				var id = popmenu.add('启用英文键盘',function(id){
					..tsfInput.enableUsKeyboard(!imStatus.en);
				});
				popmenu.check(id,imStatus.en,0/*_MF_BYCOMMAND*/); 	
			}
			 
			popmenu.add('打开系统输入法设置',function(id){
				..raw.execute("control.exe","input.dll")
			}); 
		}
		
		var id = popmenu.add('反转鼠标左右按键',function(id){
			::User32.SwapMouseButton(!::User32.GetSystemMetrics(23));
		});
		popmenu.check(id,::User32.GetSystemMetrics(23),0/*_MF_BYCOMMAND*/); 
		
		popmenu.add('打开屏幕键盘',function(id){
			import process.wow64;
			process.wow64.execute("osk")
		});
		
		popmenu.add();//分隔线 
		
		if(..mainForm.onTrayMenu){
			..mainForm.onTrayMenu(popmenu)
		}
		
		popmenu.add('AI 智能助手\tShift+单击托盘',function(id){
 			import process.imTip; 
			process.imTip(chat = ""); 
			
			..mainForm.show(false);
		});
		
		popmenu.add('AI 词典',function(id){
			if(..mainSettingForm) ..mainSettingForm.show(false);  
			
			import process.aardio;
			if(!process.aardio.getDir()){
				..mainForm.show();
				..win.setForeground(..mainForm.hwnd);	
				return ..mainForm.msgboxErr("请先点击「编辑超级热键」以创建 aardio 环境。");
			}
			
			process.aardio.run(
				function(){   
					global.import("win.dlg.flashDict");
					..win.dlg.flashDict().doModal();
				}
			)
			
			..mainForm.show(false);
		});
		
		popmenu.add();//分隔线 
		
		popmenu.add('退出程序',function(id){ 
			if(..mainSettingForm) ..mainSettingForm.exportStyleToSysConfig();
			
			winform.close();
			..win.quitMessage();
		});	 
		
		return popmenu; 
	};
}

appTrayMenu.weaselIsShowNotifications = function(){
	import sys.reg;
	var userDir = ..sys.reg.getValue("RimeUserDir","Software\Rime\Weasel")
	if(!#userDir){
		userDir = ..io.getSpecial(0x1a/*_CSIDL_APPDATA*/,"Rime")
		var cfgPath = ..io.joinpath(userDir,"weasel.custom.yaml");
		if(..io.exist(cfgPath)){
			var str = ..string.load(cfgPath);
			if( ..string.find(str,"show_notifications\:\s*false!\W") ){
				return false; 
			}
		}
	} 
	return true;
}

appTrayMenu.weaselShowNotifications = function(value){
	value = tostring(value);
	
	import sys.reg;
	import process.cache;
	import process.popen;
	import fsys.path;
	
	var weaselPath = ..process.cache.find("WeaselServer.exe")
	var deployerPath = ..fsys.path.replaceFile(weaselPath,"WeaselDeployer.exe")
	
	if(weaselPath){
		var dir = ..io.splitpath(weaselPath).dir
		var depolyerPath = ..io.joinpath(dir,"WeaselDeployer.exe");
		if(..io.exist(depolyerPath)){ 
		 	
			var userDir = ..sys.reg.getValue("RimeUserDir","Software\Rime\Weasel")
			if(!#userDir){
				userDir = ..io.getSpecial(0x1a/*_CSIDL_APPDATA*/,"Rime")
				var cfgPath = ..io.joinpath(userDir,"weasel.custom.yaml");
				if(..io.exist(cfgPath)){
					var count;
					var str = ..string.load(cfgPath);
					str,count = ..string.replace(str,"show_notifications\:\s*[\w\_]+","show_notifications: "+value);

					if(!count){
						str,count = ..string.replace(str,"!\Npatch\:",'patch:\n  show_notifications: '+value);
						
						if(!count ){
							if(!..string.find(str,"!\Npatch\:")){
								str = str + 'patch:\n  show_notifications: '+value;
							}
							else {
								return false;
							}
							
						}
					}
					
					..string.save(cfgPath, str);
					..process.popen(deployerPath,"/deploy")
					
  					return true;
				}
				else {
					..string.save(cfgPath, 'patch:\n  show_notifications: '+value);
					..process.popen(deployerPath,"/deploy")
					
					return true;
				}
				
			}
		}
	}
	
	return false;
}

/**intellisense()
ui.appTrayMenu() = 托盘菜单\n!popmenu.
end intellisense**/

/*
import process.imTip
*/